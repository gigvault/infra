# GigVault Kubernetes Secrets
# ⚠️ IMPORTANT: These are EXAMPLE values for local development only!
# In production, use:
# - kubectl create secret
# - Sealed Secrets
# - External Secrets Operator
# - HashiCorp Vault
# - AWS Secrets Manager
# - Azure Key Vault

---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: gigvault
type: Opaque
stringData:
  POSTGRES_USER: gigvault
  POSTGRES_PASSWORD: changeme_prod_secure_password_here
  POSTGRES_DB: gigvault

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-keys
  namespace: gigvault
type: Opaque
stringData:
  # Generate with: openssl ecparam -genkey -name prime256v1 -noout -out private.pem
  private.pem: |
    -----BEGIN EC PRIVATE KEY-----
    MHcCAQEEIExample_Replace_With_Real_Key_Data_Here
    -----END EC PRIVATE KEY-----
  # Generate with: openssl ec -in private.pem -pubout -out public.pem
  public.pem: |
    -----BEGIN PUBLIC KEY-----
    MFkwEwExample_Replace_With_Real_Public_Key_Data_Here
    -----END PUBLIC KEY-----

---
apiVersion: v1
kind: Secret
metadata:
  name: ca-key
  namespace: gigvault
type: Opaque
stringData:
  # CA private key (from HSM or secure generation)
  key.pem: |
    -----BEGIN EC PRIVATE KEY-----
    MHcCAQEEIExample_CA_Private_Key_From_HSM_Or_Secure_Storage
    -----END EC PRIVATE KEY-----

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certs
  namespace: gigvault
type: kubernetes.io/tls
stringData:
  # TLS certificate for services
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBExample_TLS_Certificate_Data_Here
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN EC PRIVATE KEY-----
    MHcCAQEEIExample_TLS_Private_Key_Data_Here
    -----END EC PRIVATE KEY-----

---
apiVersion: v1
kind: Secret
metadata:
  name: db-client-certs
  namespace: gigvault
type: Opaque
stringData:
  # PostgreSQL client certificates for SSL/TLS
  client.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBExample_DB_Client_Certificate_Data_Here
    -----END CERTIFICATE-----
  client.key: |
    -----BEGIN EC PRIVATE KEY-----
    MHcCAQEIExample_DB_Client_Key_Data_Here
    -----END EC PRIVATE KEY-----
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBExample_DB_CA_Certificate_Data_Here
    -----END CERTIFICATE-----

---
apiVersion: v1
kind: Secret
metadata:
  name: encryption-key
  namespace: gigvault
type: Opaque
stringData:
  # AES-256 encryption key (base64 encoded)
  # Generate with: openssl rand -base64 32
  ENCRYPTION_KEY: "Example_Replace_With_32_Byte_Base64_Key=="

